// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: test.proto

package myproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EvaluationProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// main fields
	Id                      *uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Status                  *uint32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"` // refer to ProjectStatus
	Ctime                   *int64  `protobuf:"varint,3,opt,name=ctime" json:"ctime,omitempty"`
	Utime                   *uint64 `protobuf:"varint,4,opt,name=utime" json:"utime,omitempty"`
	ProjectType             *uint32 `protobuf:"varint,5,opt,name=project_type,json=projectType" json:"project_type,omitempty"`
	Country                 *string `protobuf:"bytes,6,opt,name=country" json:"country,omitempty"`
	Name                    *string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	Algorithm               *string `protobuf:"bytes,8,opt,name=algorithm" json:"algorithm,omitempty"`
	Algorithm_2             *string `protobuf:"bytes,9,opt,name=algorithm_2,json=algorithm2" json:"algorithm_2,omitempty"`
	EvaluationStartTime     *int64  `protobuf:"varint,10,opt,name=evaluation_start_time,json=evaluationStartTime" json:"evaluation_start_time,omitempty"`
	EvaluationEndTime       *int64  `protobuf:"varint,11,opt,name=evaluation_end_time,json=evaluationEndTime" json:"evaluation_end_time,omitempty"`
	ReviewImportedProjectId *uint64 `protobuf:"varint,12,opt,name=review_imported_project_id,json=reviewImportedProjectId" json:"review_imported_project_id,omitempty"`
	ReviewImportedTime      *int64  `protobuf:"varint,13,opt,name=review_imported_time,json=reviewImportedTime" json:"review_imported_time,omitempty"`
	AdsAbSignature          *string `protobuf:"bytes,14,opt,name=ads_ab_signature,json=adsAbSignature" json:"ads_ab_signature,omitempty"`
	ItemMode                *uint32 `protobuf:"varint,15,opt,name=item_mode,json=itemMode" json:"item_mode,omitempty"`
	ItemBatchSize           *uint32 `protobuf:"varint,16,opt,name=item_batch_size,json=itemBatchSize" json:"item_batch_size,omitempty"`
	MarkSameItems           *bool   `protobuf:"varint,17,opt,name=mark_same_items,json=markSameItems" json:"mark_same_items,omitempty"`
}

func (x *EvaluationProject) Reset() {
	*x = EvaluationProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationProject) ProtoMessage() {}

func (x *EvaluationProject) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationProject.ProtoReflect.Descriptor instead.
func (*EvaluationProject) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

func (x *EvaluationProject) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *EvaluationProject) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *EvaluationProject) GetCtime() int64 {
	if x != nil && x.Ctime != nil {
		return *x.Ctime
	}
	return 0
}

func (x *EvaluationProject) GetUtime() uint64 {
	if x != nil && x.Utime != nil {
		return *x.Utime
	}
	return 0
}

func (x *EvaluationProject) GetProjectType() uint32 {
	if x != nil && x.ProjectType != nil {
		return *x.ProjectType
	}
	return 0
}

func (x *EvaluationProject) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *EvaluationProject) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *EvaluationProject) GetAlgorithm() string {
	if x != nil && x.Algorithm != nil {
		return *x.Algorithm
	}
	return ""
}

func (x *EvaluationProject) GetAlgorithm_2() string {
	if x != nil && x.Algorithm_2 != nil {
		return *x.Algorithm_2
	}
	return ""
}

func (x *EvaluationProject) GetEvaluationStartTime() int64 {
	if x != nil && x.EvaluationStartTime != nil {
		return *x.EvaluationStartTime
	}
	return 0
}

func (x *EvaluationProject) GetEvaluationEndTime() int64 {
	if x != nil && x.EvaluationEndTime != nil {
		return *x.EvaluationEndTime
	}
	return 0
}

func (x *EvaluationProject) GetReviewImportedProjectId() uint64 {
	if x != nil && x.ReviewImportedProjectId != nil {
		return *x.ReviewImportedProjectId
	}
	return 0
}

func (x *EvaluationProject) GetReviewImportedTime() int64 {
	if x != nil && x.ReviewImportedTime != nil {
		return *x.ReviewImportedTime
	}
	return 0
}

func (x *EvaluationProject) GetAdsAbSignature() string {
	if x != nil && x.AdsAbSignature != nil {
		return *x.AdsAbSignature
	}
	return ""
}

func (x *EvaluationProject) GetItemMode() uint32 {
	if x != nil && x.ItemMode != nil {
		return *x.ItemMode
	}
	return 0
}

func (x *EvaluationProject) GetItemBatchSize() uint32 {
	if x != nil && x.ItemBatchSize != nil {
		return *x.ItemBatchSize
	}
	return 0
}

func (x *EvaluationProject) GetMarkSameItems() bool {
	if x != nil && x.MarkSameItems != nil {
		return *x.MarkSameItems
	}
	return false
}

var File_test_proto protoreflect.FileDescriptor

var file_test_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x04, 0x0a, 0x11, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x75, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x75, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x5f, 0x32,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x32, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x64, 0x73, 0x5f, 0x61, 0x62, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x61, 0x64, 0x73, 0x41, 0x62, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x73, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6d,
	0x61, 0x72, 0x6b, 0x53, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x0c, 0x5a, 0x0a,
	0x79, 0x79, 0x2f, 0x6d, 0x79, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_test_proto_rawDescOnce sync.Once
	file_test_proto_rawDescData = file_test_proto_rawDesc
)

func file_test_proto_rawDescGZIP() []byte {
	file_test_proto_rawDescOnce.Do(func() {
		file_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_proto_rawDescData)
	})
	return file_test_proto_rawDescData
}

var file_test_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_test_proto_goTypes = []interface{}{
	(*EvaluationProject)(nil), // 0: test_proto.EvaluationProject
}
var file_test_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_test_proto_init() }
func file_test_proto_init() {
	if File_test_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_proto_goTypes,
		DependencyIndexes: file_test_proto_depIdxs,
		MessageInfos:      file_test_proto_msgTypes,
	}.Build()
	File_test_proto = out.File
	file_test_proto_rawDesc = nil
	file_test_proto_goTypes = nil
	file_test_proto_depIdxs = nil
}
